subnet <%= @subnet %> netmask <%= @netmask%> {
<% unless @pools.nil? || @pools.empty? -%>
<% @pools.each do |pool| -%>
<%= render 'subnet_pool.erb', :cookbook => 'dhcp', :variables => { node: @node, peer: pool.peer, range: pool.range, deny: pool.deny, allow: pool.allow } %>
<% end -%>
<% end -%>
<% if @ddns -%>
  ddns-domainname "<%= @ddns %>";
<% end -%>
<% unless @routers.empty? -%>
  option routers <%= @routers.map {|i| i }.join(",") %>;
<% end -%>
<% if @netmask -%>
  option subnet-mask <%= @netmask %>;
<% end -%>
<% if @broadcast -%>
  option broadcast-address <%= @broadcast %>;
<% end -%>
<% unless @options.empty? -%>
<% @options.sort.each do |option| -%>
  option <%= option %>;
<% end -%>
<% end -%>
<% if @next_server -%>
  next-server <%= @next_server %>;
<% end -%>
<% @evals.sort.each do |eval| -%>
<%= eval %>

<% end -%>
<% unless @key.empty? -%>
  key <%= @key['name'] %> {
    algorithm <%= @key['algorithm'] %>;
    secret "<%= @key['secret'] %>";
  };

<% end -%>
<% unless @zones.empty? -%>
<% @zones.each do |zone| -%>
  zone <%= zone['zone'] %> {
    primary <%= zone['primary'] %>;
    key <%= zone['key'] %>;
  }
<% end -%>

<% end -%>
}

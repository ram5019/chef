{
  "name": "fb_systemd",
  "description": "Installs/Configures systemd",
  "long_description": "fb_systemd Cookbook\n====================\n\nRequirements\n------------\n\nAttributes\n----------\n* node['fb_systemd']['default_target']\n* node['fb_systemd']['modules']\n* node['fb_systemd']['system']\n* node['fb_systemd']['user']\n* node['fb_systemd']['udevd']['config']\n* node['fb_systemd']['udevd']['hwdb']\n* node['fb_systemd']['udevd']['rules']\n* node['fb_systemd']['journald']['config']\n* node['fb_systemd']['journal-gatewayd']['enable']\n* node['fb_systemd']['journal-remote']['enable']\n* node['fb_systemd']['journal-remote']['config']\n* node['fb_systemd']['journal-upload']['enable']\n* node['fb_systemd']['journal-upload']['config']\n* node['fb_systemd']['logind']['enable']\n* node['fb_systemd']['logind']['config']\n* node['fb_systemd']['networkd']['enable']\n* node['fb_systemd']['resolved']['enable']\n* node['fb_systemd']['resolved']['config']\n* node['fb_systemd']['timesyncd']['enable']\n* node['fb_systemd']['timesyncd']['config']\n* node['fb_systemd']['coredump']\n* node['fb_systemd']['tmpfiles']\n* node['fb_systemd']['preset']\n* node['fb_systemd']['manage_systemd_packages']\n* node['fb_systemd']['boot']['enable']\n* node['fb_systemd']['boot']['path']\n* node['fb_systemd']['boot']['loader']\n* node['fb_systemd']['boot']['entries']\n\nUsage\n-----\nThis cookbooks manages systemd. It is only supported on systemd-enabled \ndistributions (e.g. CentOS 7 or Debian 8). Just include `fb_systemd` in your \nrunlist to use it.\n\n### FB::Systemd\nThe following methods are available:\n\n* `FB::Systemd.path_to_unit(path, unit_type)`\n  Convert a given `path` to a unit name of `unit_type` type.\n\n     FB::Systemd.path_to_unit('/dev/mapper/dm-0', 'swap')\n     => dev-mapper-dm\\x2d0.swap\n\n### Providers\n\n* a `fb_systemd_reload` LWRP to safetly trigger a daemon reload for a systemd\n  instance (at the system or user level)\n\n    fb_systemd_reload 'reload systemd' do\n      instance 'user'\n      user 'dcavalca'\n    end\n\n  The `instance` attribute can be `system` or `user` and defines which instance\n  will be reloaded. For user instances, the optional attribute `user` defines\n  which user instance should be reloaded; if it's omitted or `nil`, the LWRP\n  will reload systemd for all active user sessions.\n\n* two resources (`fb_systemd_reload[system instance]` and \n  `fb_systemd_reload[all user instances]`) that other recipes can notify \n  whenever they need to reload systemd (e.g. because the added or modified a \n  unit); these are built on top of the `fb_systemd_reload` LWRP.\n\n### Default Target\nThe default systemd target can be configured with\n`node['fb_systemd']['default_target']`. It defaults to\n`/lib/systemd/system/multi-user.target`.\n\n### System and session configuration\nYou can tune system-level or session-level defaults for systemd by using the \nattributes `node['fb_systemd']['system']` and `node['fb_systemd']['user']`.\nThis is useful e.g. to set system-level limits for services (as systemd doesn't\nenforce PAM limits set via `fb_limits` for system services), such as:\n\n    node.default['fb_systemd']['system']['DefaultLimitNOFILE'] = 65535 \n\nRefer to the \n[systemd documentation](https://www.freedesktop.org/software/systemd/man/systemd-system.conf.html) \nfor more details on what settings are available.\n\n### udevd configuration\nUdevd is a critical system daemon and cannot be disabled. General udev settings\ncan be configured via `node['fb_systemd']['journald']['config']`, as described \nin the \n[udev documentation](https://www.freedesktop.org/software/systemd/man/udev.conf.html).\n\nAdditional entries to the hardware database can be entered using the\n`node['fb_systemd']['udevd']['hwdb']` attribute, as described in the\n[hwdb documentation](https://www.freedesktop.org/software/systemd/man/hwdb.html).\nExample:\n\n    node.default['fb_systemd']['udevd']['hwdb']['evdev:input:b0003v05AFp8277*'] = {\n      'KEYBOARD_KEY_70039' => 'leftalt',\n      'KEYBOARD_KEY_700e2' => 'leftctrl',\n    }\n\nAdditional udev rules can be defined using the \n`node['fb_systemd']['udevd']['rules']` attribute, as described in the\n[udev documentation](https://www.freedesktop.org/software/systemd/man/udev.html).\nExample:\n\n    node.default['fb_systemd']['udevd']['rules'] += [\n      'KERNEL==\"fd[0-9]*\", OWNER=\"john\"',\n    ]\n\n### journald configuration\nJournald is a critical system daemon and cannot be disabled. By default we \nconfigure journald to use the 'auto' storage (disk if the log directory exists,\nor ram otherwise, which is the default for most distros). You can change these \nsettings and more through `node['fb_systemd']['journald']['config']`.\n\nRefer to the \n[journald documentation](https://www.freedesktop.org/software/systemd/man/journald.conf.html)\nfor more details on possible configurations.\n\n### journal-gatewayd configuration\nYou can choose whether or not to enable `systemd-journal-gatewayd` with the\n`node['fb_systemd']['journal-gatewayd']['enable']` attribute, which defaults\nto `false`. Please refer to the\n[journal-gatewayd documentation](https://www.freedesktop.org/software/systemd/man/systemd-journal-gatewayd.html)\nfor more information.\n\n### journal-remote configuration\nYou can choose whether or not to enable `systemd-journal-remote` with the\n`node['fb_systemd']['journal-remote']['enable']` attribute, which defaults\nto `false`. journal-remote can be configured using the \n`node['fb_systemd']['journal-remote']['config']` attribute, according to the\n[journal-remote documentation](https://www.freedesktop.org/software/systemd/man/journal-remote.conf.html).\n\n### journal-upload configuration\nYou can choose whether or not to enable `systemd-journal-upload` with the\n`node['fb_systemd']['journal-upload']['enable']` attribute, which defaults\nto `false`. journal-upload can be configured using the\n`node['fb_systemd']['journal-upload']['config']` attribute, according to the\n[journal-upload documentation](https://www.freedesktop.org/software/systemd/man/systemd-journal-upload.html).\n\n### logind configuration\nYou can choose whether or not to enable `systemd-logind` with the\n`node['fb_systemd']['logind']['enable']` attribute. Note that for user sessions\nto work, this is required, and it defaults to true. Logind can be configured\nusing the `node['fb_systemd']['logind']['config']` attribute, according to the\n[logind documentation](https://www.freedesktop.org/software/systemd/man/logind.conf.html).\n\n### networkd configuration\nYou can choose whether or not to enable `systemd-networkd` with the\n`node['fb_systemd']['networkd']['enable']` attribute, which defaults to `false`.\n\nNote that this cookbook does not manage network configuration profiles. If you \ndrop `netdev`, `link`, `network` definitions under `/etc/systemd/network` from\nanother cookbook you'll want to request a restart of the `systemd-networkd`\nservice.\n\n### resolved configuration\nYou can choose whether or not to enable `systemd-resolved` with the\n`node['fb_systemd']['resolved']['enable']` attribute, which defaults to `false`.\nNote that this will also enable the `nss-resolve` resolver in \n`/etc/nsswitch.conf` in place of the glibc `dns` one (using the API provided by\n`fb_nsswitch`). Resolved can be configured using the\n`node['fb_systemd']['resolved']['config']` attribute, as described in the\n[resolved documentation](https://www.freedesktop.org/software/systemd/man/resolved.conf.html).\n\nNote that this cookbook does not manage `/etc/resolv.conf`. If you're using \nresolved, you probably want to make that a symlink to \n`/run/systemd/resolve/resolv.conf`. \n\n### timesyncd configuration\nYou can choose whether or not to enable `systemd-timesyncd` with the\n`node['fb_systemd']['timesyncd']['enable']` attribute, which defaults to `false`.\nYou'll want to disable this if you're running another NTP daemon such as ntpd.\nTimesyncd can be configured with the `node['fb_systemd']['timesyncd']['config']`\nattribute, as described in the\n[timesyncd documentation](https://www.freedesktop.org/software/systemd/man/timesyncd.conf.html).\n\n### Coredump configuration\nsystemd provides a facility for collecting and analyzing coredumps of system\nservices. This can be configured using the `node['fb_systemd']['coredump']`\nattribute, as described in the\n[coredump documentation](https://www.freedesktop.org/software/systemd/man/coredump.conf.html).\n\n### Kernel modules\nUse `node['fb_systemd']['modules']` to tell systemd to load a list of\nkernel modules on startup. Note that in most cases you probably want to use\n`node['fb_modprobe']['modules_to_load_on_boot']` instead as that'll work\ntransparently on non-systemd hosts as well.\n\n### tmpfiles configuration\nUse `node['fb_systemd']['tmpfiles']` to control the creation, deletion\nand cleaning of volatile and temporary files. For example:\n\n    node.default['fb_systemd']['tmpfiles']['/run/user'] = {\n      'type' => 'd',\n      'mode' => '0755',\n      'uid' => 'root',\n      'gid' => 'root',\n      'age' => '10d',\n      'argument' => '-',\n    }\n\nIf `type` is omitted, it defaults to `f` (create a regular file); if `path` is\nomitted, it defaults to the configuration key (i.e. `/run/user` in the example).\nIf any other argument is omitted, it defaults to `-`. Refer to the\n[tmpfiles documentation](http://www.freedesktop.org/software/systemd/man/tmpfiles.d.html)\nfor more details on how to use tmpfiles and the meaning of the various options.\n\n### Presets\nYou can add preset settings to `node['fb_systemd']['preset']`. As an example to\ndisable a unit:\n\n    node.default['fb_systemd']['preset']['tmp.mount'] = 'disable'\n\nPossible values can be found at\nhttps://www.freedesktop.org/software/systemd/man/systemd.preset.html\n\nThey are installed in `/etc/systemd/system-preset/00-fb_systemd.preset` which \nwill take precedence over other preset files.\n\n### Packages\nBy default this cookbook keeps the systemd packages up-to-date, but if you\nwant to manage them locally, simply set\n`node['fb_systemd']['manage_systemd_packages']` to false.\n\n### Boot\nYou can choose whether or not to enable `systemd-boot` with the\n`node['fb_systemd']['boot']['enable']` attribute, which defaults to `false`.\nThis controls whether `systemd-boot` will be installed, or whether it will be\nupdated on package updates. Note that `systemd-boot` only works on EFI systems\nand requires a mounted EFI Service Partition (ESP). The cookbook will attempt\nto autodetect the ESP mountpoint, which can be overwritten with \n`node['fb_systemd']['boot']['path']`. General loader settings can be controlled\nwith `node['fb_systemd']['boot']['loader']`. Finally, loader entries can be \ndefined by populating `node['fb_systemd']['boot']['entries']`, e.g. by writing\na `ruby_block` to scan for installed kernels and set the appropriate entries.\nPlease refer to the \n[upstream documentation](https://www.freedesktop.org/wiki/Software/systemd/systemd-boot/)\nfor more details.\n",
  "maintainer": "Facebook",
  "maintainer_email": "noreply@facebook.com",
  "license": "BSD-3-Clause",
  "platforms": {
    "centos": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "ubuntu": ">= 0.0.0"
  },
  "dependencies": {
    "fb_helpers": ">= 0.0.0",
    "fb_nsswitch": ">= 0.0.0"
  },
  "recommendations": {

  },
  "suggestions": {

  },
  "conflicting": {

  },
  "providing": {

  },
  "replacing": {

  },
  "attributes": {

  },
  "groupings": {

  },
  "recipes": {

  },
  "version": "0.0.1",
  "source_url": "https://github.com/facebook/chef-cookbooks/",
  "issues_url": "",
  "privacy": false,
  "chef_versions": [

  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
